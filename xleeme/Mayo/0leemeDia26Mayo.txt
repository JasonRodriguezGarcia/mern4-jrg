EMPRESA DONOSTI FRAME

MongoDB basado en colecciones

SQL         MongoDB (no hay esquema ->schemaless)
----------  -------------------------------------
base datos  base de datos
tabla       coleccion
registro    documento

buscar en google mongodb 
seleccionar mongodb atlas

ENTRO CON CUENTA GOOGLE MÍA DE EMPLEO
ACTIVAR aceptar
Submit
Rellenar motivos y preferencias
GETTING TO KNOW YOU
GETTING TO KNOW YOUR PROYECT
Finish

Deploy your cluster
    Free (512MB Storage, Ram Shared, vCPU shared)
Configurations
    name Cluster0jrg
Provider 
    AWS
Region
    Paris
Quick Setup
    Dejar solo Activado Preload sample dataset (para tener bases de datos de prueba)

Create Deployment
Pasaremos a la ventana Connect to Cluster0jrg
current ip address 0.0.0.0
    Username    mongodb
    Password    mongodb
Close

A la izquierda Database 
    Cluster 
    Aparecerá nuestro Cluster0jrg, si pinchamos en el entramos vemos varios detalles
        Collections - muestra nuestras bases de datos, tablas (colecciones) que contendran registros(documentos)
filter (movies)
    {"year": 1983}

en collections
    crear Database
        clase
    collection name
        productos
    addicional preferentes
        no tocar
    create
    
https://github.com/chekulhan/Desarrollo-Web/blob/main/UF1845-Acceso-a-Datos/mongodb/01-configuracion.md

[
  { "prodId": 100, "nombreProducto": "Camiseta", "precio": 20.99, "cantidad": 125 },
  { "prodId": 101, "nombreProducto": "Pantalón", "precio": 10.50, "cantidad": 234 },
  { "prodId": 102, "nombreProducto": "Chaqueta", "precio": 15.75, "cantidad": 432 },
  { "prodId": 103, "nombreProducto": "Zapatos", "precio": 17.30, "cantidad": 320 }
]

Insertamos en nuestra coleccion productos los datos de arriba
A la derecha INSERT DOCUMENT
    Podremos insertar nuestros datos en 2 formatos que aparecen en VIEW
    Pinchar en {}
    Entre {} podríamos insertar nuestros datos, PERO ESTE CASO borramos los {}
Insert (abajo derecha)
Volveremos otra vez a la pantalla de bases de datos y colecciones, pero ahora en productos ya tenemos insertados nuestros datos

Podemos usar la línea Filter para manejar datos
En Filter podremos poner
{"precio": {$gt:10}}

filter
{"deptno": 2}
otro
{cantidad: {$gte: 400}}
otro
{$and: [{cantidad: {$gte: 300}}, {precio: {$gte: 17}}]}
A la derecha de FILTER aparece OPTIONS
En la línea de FILTER pondremos nuestro filtro pero además seleccionaremos los campos a ver con Project
Project
{nombreProducto: 1, _id: 0} --1 activa visualizar el campo nombre y dname, 0 -desactiva

ejemplos de filtro para dept y empleados
{"loc": 1, "dname": 1}  --1 activa visualizar el campo nombre y dname, 0 -desactiva

filter
{"emps.empNo": 2}
{"emps.name": "Luis"}

indexes
create index
{
  "loc": 1
}

Podemos enlazar nuestro Cluster y sus bases de datos con VSC (Visual Studio Code)
A la izquierda - Cluster
    Connect
        poner username y password (mongodb en los 2)
        PINCHAR en Create Database User
    Chose a connection method (abajo a la derecha)
        MongoDB for VSC
        Aparece una ventana indicando que tendremos que instalar una extensión en VSC y copia una cadena en el apartado 3.

copiar codigo to connect to your mongodb
mongodb+srv://mongodb:<db_password>@cluster0jrg.kovfslk.mongodb.net/  -- casa
mongodb+srv://mongodb:<db_password>@nzcluster-01.ox3d0eu.mongodb.net/ -- clase

Ir a VSC
extensiones buscar mongodb for vs code e instalar
connect se habre la barra comandos VSC
pegamos (mongodb es password)
mongodb+srv://mongodb:mongodb@nzcluster-01.ox3d0eu.mongodb.net/ --clase
mongodb+srv://mongodb:<db_password>@cluster0jrg.kovfslk.mongodb.net/  -- casa

Se abre una pestaña adicional playground-1.mongodb.js en la que podremos ejecutar comandos de Mongodb
Crea un entorno en plan herramientas de consulta en postgress
Darle al PLAY DE ARRIBA A LA DERECHA para ejecutar el playground-1

use('scott');
db.dept.find({'deptNo': 1});

marcar solo 2 lineas y PLAY
use('scott');
// db.dept.find({'deptNo': 2});
db.dept.find({'emps.name': "Luis"})


use('scott');
// db.dept.find({'deptNo': 2});
db.dept.find({'emps.name': "Luis"})

db.dept.findOne({"_id": objectId('68263948689')})

use('clase');
db.getCollection("productos").find(
    {"cantidad": {$gt: 9}},
    {"_id": 0, "nombreProducto": 1, "cantidad": 1}
);

use('clase');
db.getCollection("productos").findOne(
    {"cantidad": {$gt: 1}}
);


use('clase');
db.productos.insertOne({
    prodId: 656,
    nombreProducto: 'VSCode',
    precio: 110,
    cantidad: 50
});

use('clase');
db.getCollection("productos").findOne(
    {"nombreProducto": "VSCode"}
);

IR A playground-1.mongodb.js hay ejercicios

VAMOS A NODEJS
Connect en ATLAS clould.mongodb.com
Esta vez en lugar de MongoDB for VSC elegimos
    Drivers
Driver node.js
    npm install mongodb (indica instalar mongodb en nodejs)
Copiar cadena del punto 3. Nos servirá para llamar a MongoDB desde node.
    mongodb+srv://mongodb:<db_password>@cluster0jrg.kovfslk.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0jrg
En VSC crear index-mongodb.js
    pegar conexion de mongodb
ejecutar 
    node index-mongodb.js
